#include "list.h"
#include <iostream>
#include <stdlib.h>

using namespace std;

List:: List(){


}

Node* List::getHead()
{
  return head;
}


void List::expressionToList(string exp){
  
  Node* parent;
  Node* current = new Node;
  Node* n;
  head = current; //access list with this head

  for(int i = 1; i<exp.length(); i++){
    
    if(exp[i] == '('){
      parent = current;//create a parent node to access later                                                                                                                                         
      n = new Node();
      if(current->getLeft() == NULL)
        current->setLeft(n);
      else
        current->setRight(n);

    current = n;
    
    }
    

   else if(exp[i] == '+' || exp[i] == '-' || exp[i] == '*' || exp[i] == '/')
      {
	
	

        if(exp[i] == '+'){
          current->setDataOP(PLUS);
	  current->setNodeType(EXPRESSION);
	}
        if(exp[i] == '-'){
          current->setDataOP(MINUS);
	  current->setNodeType(EXPRESSION);
	}
        if(exp[i] == '*'){
          current->setDataOP(MULT);
	  current->setNodeType(EXPRESSION);
	}
        if(exp[i] == '/'){
          current->setDataOP(DIVIDE);
	  current->setNodeType(EXPRESSION);
	}
      
	
       
      }

    else if(exp[i] == 'x')
      {
        Node*z = new Node('x');
	z->setNodeType(VARIABLE);
	current->setLeft(z);
	
      }
    
    else if(exp[i] == '0' ||exp[i] == '1' ||exp[i] == '2' ||exp[i] == '3' ||exp[i] == '4' ||exp[i] == '5' ||exp[i] == '6' ||exp[i] == '7' ||exp[i] == '8' ||exp[i] == '9')
      {
	int t = (exp[i] - '0'); 
	cout<<t<<endl;
	Node*y = new Node(t);
	y->setNodeType(INTEGER);
        current->setRight(y);
	
      }

    else if(exp[i] == ')')
      {
        current = parent;
	
      }
    }

  
}
